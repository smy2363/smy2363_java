package study0803;

public class study0803_1 {

	public static void main(String[] args) {
	
		/*
		 
		  인스턴스 변수란? (non static 변수)
		   - 클래스 내에 선언된 일반적인 변수
		   ex) String id; int age , char grade;  
		   - 객체 생성시마다 매번 새로운 변수가 생성됨
		   - 클래스 변수와 달리 공유되지 않음
		  
		  
		  클래스 변수 (static 변수)
		  - 인스턴스 변수앞에 static을 붙이기만 하면됨.
		  - 한 클래스의 모든 인스턴스들이 공통적인 값을 유지해야하는 속성의 경우 클래스 변수로 선언해야함
		  - 인스턴스를 생성하지 않고도 바로사용가능
		  - 클래스가 여러번 생성되어도 static변수는 처음 딱 한번만 생성된다.
		  - 동일한 클래스의 모든객체들에 의해서 공유된다.
		  
		  메서드(method)란? 
		  
		  - 클래스 내부에 존재하는 영역으로 특정기능을 하는 코드를 묶어서 나타내는 것
		  - 특정기능을 수행하기 위한 코드들의 집합체
		  - 접근 제어자 반환타임 메소드이름(매개변수목록){ 선언부
		  	구현부
		  }
		  	- 접근제어자 : 해당 메소드에 접근할 수 있는 범위를 명시
		  	- 반환타입(return type): 메소드가 모든 작업을 마치고 반환하는 데이터의 타입을 명시
		  	- 메소드이름: 메소드를 호출하기 위한 이름을 명시
		  	- 매개변수 목록(parameters): 메소드 호출시에 전달되는 인수의 값을 저장할 변수들을 명시
		  	- 구현부: 메소드의 고유기능을 수행하는 명령문의 집합 
		  
		  		class car{
		  			private int currentSpeed;
		  			private int accelerationTiome;
		  			
		  			public void accelerate(int speed, int second){ 선언부
		  				구현부
		  				System.out.println(second+"초간 속도를시속" + speed + "(으)로 가속함!!");
		  			}
		  
		  인스턴스 메소드와 클래스메소드의 차이와 활용
		  
		  
		  static 메소드란?
		  - 메소드 앞에 static이 붙은 메소드이다.
		  - 객체 생성 없이 호출이 가능한 메소드이다.	
		  
		 클래스메소드와 인스턴스메소드의 차이는 인스턴스 변수 사용 유무로 나뉜다.
		  
		  
		  인스턴스 메소드란?
		  
		   - 인스턴스 생성 후 '참조변수, 메소드명()' 으로 호출한다.
		   - 인스턴스 멤버와 관련된 작업을 한다.
		   - 메소드 내에서 인스턴스 변수를 사용할 수 잇다.
		   - 인스턴스 변수를 이용해서 작업을 하므로 변수의 묶음인 객체를 생성해야 인스턴스 메소드를 호출할 수 있다.
		   
		   예시)Exam ex = new Exam(); ex.example = "예시"
		   
		 클래스 메소드(static메소드)란?
		 
		 	- 객체생성없이 '클래스명, 메소드명()'으로 호출이 가능하다.
		 	- 인스턴스 멤버와 관련되지 않은 작업을 한다.
		 	- 메소드 내에서 인스턴스 변수를 사용할 수 없다.
		 	- 인스턴스 메소드와 달리 인스턴스 변수가 필요 없으므로 객체를 생성하지 않고도 호출할 수 있다.
		    
		  예시) Math.radom()
		  
		  
		  
		  <차이>

		  클래스(static)메소드는 인스턴스 변수를 호출할 수 없지만 
		  인스턴스 메소드는 static 변수를를  호출할 수 있다.
		  
		  클래스메소드는 인스턴스 메소드를 호출할 수 없지만 인스턴스 메소드는
		  클래스 메소드를 호출할 수 있가.
		  
		  	- 클래스 메소드가 인스턴스 변수, 메소드를 사용하려면 객체생성이 필요하다.
		  	  클래스메소드는 항상 호출이 가능해야하는데 객체가 있을지 없을지 모르기때문에 사용불가능하다.
		  
		  클레스 메소드끼리, 인스턴스 메소드끼리는 호출이 가능하다.
		  
		  
		  <활용>
		  
		  메소드의 경우 
		  	
		  	인스턴스 변수를 사용하지 않는 경우에  static을 붙인다
		  	
		  	예시)
		  	int add(){return a+b}  //a+b는 인스턴스 변수이기때문에 static을 붙이지 않는다
		  	static int add(int a, int b){return a+b} a, b는 로컬(지역) 변수이기때문에 static을 붙인다.
		  	
		  변수의 경우
		 
		   	속성(변수)중에서 인스턴스 변수(개별속성)은 static을 붙이지 않는다.
		   	클래스 변수(공통속석)은 static을 붙인다.
		   	
		   	
		  

		  
		  
	
		 */

	}

}
